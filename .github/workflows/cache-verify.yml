name: CI Cache Verification and E2E Testing

on:
  push:
    paths:
      - '.github/workflows/cache-verify.yml'
  workflow_dispatch:

jobs:
  build-environment:
    name: Build Dependencies and Environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache backend node_modules
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: node-modules-backend-${{ hashFiles('backend/yarn.lock') }}
          restore-keys: node-modules-backend-

      - name: Cache webapp node_modules
        uses: actions/cache@v4
        with:
          path: webapp/node_modules
          key: node-modules-webapp-${{ hashFiles('webapp/yarn.lock') }}
          restore-keys: node-modules-webapp-

      - name: Build backend and webapp
        run: |
          cd backend && yarn install && yarn build
          cd ../webapp && yarn install && yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            backend/node_modules
            backend/build
            webapp/node_modules
            webapp/out
            backend/.env
            webapp/.env

  build-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: backend
            context: ./backend
            dockerfile: ./backend/Dockerfile
            target: build
          - name: webapp
            context: ./webapp
            dockerfile: ./webapp/Dockerfile
            target: build
          - name: neo4j
            context: ./neo4j
            dockerfile: ./neo4j/Dockerfile
            target: community
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build ${{ matrix.name }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          target: ${{ matrix.target }}
          push: false
          outputs: type=docker,dest=/tmp/${{ matrix.name }}.tar
      - name: Upload ${{ matrix.name }} image
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-image
          path: /tmp/${{ matrix.name }}.tar
          
  consolidate-environment:
    name: Consolidate Environment and Run Tests
    runs-on: ubuntu-latest
    needs: [build-environment, build-images]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: |
            backend-image
            webapp-image
            neo4j-image
            build-artifacts
          path: /tmp
      - name: Load Docker images
        run: |
          docker load < /tmp/backend-image/backend.tar
          docker load < /tmp/webapp-image/webapp.tar
          docker load < /tmp/neo4j-image/neo4j.tar
      - name: Setup .env files
        run: |
          cp /tmp/build-artifacts/backend/.env backend/.env || true
          cp /tmp/build-artifacts/webapp/.env webapp/.env || true
      - name: Start system
        run: docker compose -f docker-compose.yml -f docker-compose.test.yml up --detach
      - name: Wait for webapp
        run: |
          for i in {1..15}; do
            curl -sf http://localhost:3000 && echo "✅ Ready" && exit 0
            echo "Waiting $i..."
            sleep 2
          done
          echo "❌ Webapp did not respond in time" && exit 1
      - name: Install Cypress and run tests
        run: |
          yarn install
          yarn run cypress:run

  verify-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [build-environment, consolidate-environment]
    if: always()
    steps:
      - name: Show summary
        run: |
          echo "### ✅ CI Cache Verification Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Build Environment: ${{ needs.build-environment.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Consolidate Environment: ${{ needs.consolidate-environment.result }}" >> $GITHUB_STEP_SUMMARY
          if [[ '${{ needs.build-environment.result }}' != 'success' || '${{ needs.consolidate-environment.result }}' != 'success' ]]; then
            echo "\n❌ One or more checks failed." >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "\n✅ All checks passed successfully!" >> $GITHUB_STEP_SUMMARY
          fi
