name: ocelot.social test-e2e ⇌⋇⟴

on:
  push:
    paths:
      - 'backend/**'
      - 'webapp/**'
      - 'neo4j/**'
      - 'cypress/**'
      - '.github/workflows/test-e2e.yml'
      - 'docker-compose*.yml'
  workflow_dispatch:

jobs:
  determine-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - name: Create dynamic test matrix
        id: set
        shell: bash
        run: |
          generate_matrix() {
            local count=$(find cypress/integration -name "*.feature" | wc -l)
            local max=8
            local actual=$(( count < max ? count : max ))
            seq 1 "$actual" | jq -R . | jq -s '.'
          }
          matrix=$(generate_matrix)
          echo "Generated Matrix: $matrix"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  build-images:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      - name: Docker cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ocelot_images.tar
          key: docker-${{ hashFiles('**/Dockerfile') }}

      - name: Build docker images (if needed)
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          docker build -t ocelot/core ./backend
          docker build -t ocelot/api ./webapp
          docker build -t ocelot/db ./neo4j
          docker save -o ocelot_images.tar ocelot/core ocelot/api ocelot/db

  test:
    name: e2e-${{ matrix.job }}
    runs-on: ubuntu-latest
    needs: [determine-matrix, build-images]
    strategy:
      fail-fast: false
      matrix:
        job: ${{ fromJson(needs.determine-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Load prebuilt docker images
        run: docker load -i ocelot_images.tar

      - name: Run Cypress tests
        run: |
          echo "Running tests for job ${{ matrix.job }}..."
          npm ci
          npm run test:e2e -- --env group=${{ matrix.job }}
