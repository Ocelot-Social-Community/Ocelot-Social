name: ocelot.social end-to-end test CI
on:
  push:
    branches:
      - cache-docker-images-in-e2e-github-flow

jobs:
  docker_preparation:
    name: Fullstack test preparation
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy env files
        run: |
          cp webapp/.env.template webapp/.env
          cp backend/.env.template backend/.env
      
      - name: Install for test tool
        run: |
          cd backend
          yarn install
          yarn build
          cd ..
          yarn install

      - name: Build docker images
        run: |
          mkdir /tmp/images
          docker build --target community -t "ocelotsocialnetwork/neo4j-community:test" neo4j/
          docker save "ocelotsocialnetwork/neo4j-community:test" > /tmp/images/neo4j.tar
          docker build --target test -t "ocelotsocialnetwork/backend:test" backend/
          docker save "ocelotsocialnetwork/backend:test" > /tmp/images/backend.tar
          docker build --target test -t "ocelotsocialnetwork/webapp:test" webapp/
          docker save "ocelotsocialnetwork/webapp:test" > /tmp/images/webapp.tar
      
      # TODO reuse the retrieved pr number in following jobs
      # - name: Get pr number
      #   id: pr
      #   uses: 8BitJonny/gh-get-current-pr@2.2.0
      
      - name: cache docker images
        id: cache
        uses: actions/cache/save@v3
        with:
          path: |
            pwd
            /tmp/images/
          key: e2e-preparation-cache-pr${{ steps.pr.outputs.number }}
  
  fullstack_tests:
    name: Fullstack tests
    if: needs.docker_preparation.outputs.cache-hit == 'true'
    needs: docker_preparation
    runs-on: ubuntu-latest
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v3
        id: cache
        with:
          path: /tmp/images/
          key: e2e-preparation-cache-pr

      # TODO remove after test phase
      - name: Check existence of docker images images
        run: |
          pwd
          ls -l
          docker images
          sudo ls -l /var/lib/docker/overlay2

      # - name: Fullstack tests | run tests
      #   run: yarn run cypress:run --spec cypress/e2e/Admin.PinPost.feature,cypress/e2e/Post.Images.feature

