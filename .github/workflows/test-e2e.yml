name: ocelot.social end-to-end test CI

on:
  push:
    paths:
      - 'webapp/**'
      - 'backend/**'
      - 'neo4j/**'
      - 'cypress/**'
      - '.github/workflows/test-e2e.yml'

jobs:
  build_images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [neo4j, backend, webapp]
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Build ${{ matrix.service }} with cache
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          target: test
          tags: ocelotsocialnetwork/${{ matrix.service }}:test
          outputs: type=docker,dest=/tmp/${{ matrix.service }}.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Cache docker image
        uses: actions/cache@v4
        with:
          path: /tmp/${{ matrix.service }}.tar
          key: docker-${{ matrix.service }}-${{ github.sha }}

  prepare_env:
    name: Prepare Environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup .env and deps
        run: |
          cp webapp/.env.template webapp/.env || true
          cp backend/.env.test_e2e backend/.env || true
          npm install -g yarn
          wget -q -O /opt/cucumber-json-formatter https://github.com/cucumber/json-formatter/releases/download/v19.0.0/cucumber-json-formatter-linux-386
          chmod +x /opt/cucumber-json-formatter
          yarn install || true
          (cd backend && yarn install && yarn build || true)
          (cd webapp && yarn install || true)

      - name: Cache node & Cypress deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            ./backend/node_modules
            ./webapp/node_modules
          key: deps-${{ github.sha }}

  fullstack_tests:
    name: Run Fullstack E2E Tests
    needs: [build_images, prepare_env]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job: [1, 2, 3, 4, 5, 6, 7, 8]
    env:
      jobs: 8
    steps:
      - uses: actions/checkout@v4

      - name: Restore caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            /tmp/neo4j.tar
            /tmp/backend.tar
            /tmp/webapp.tar
          key: all-${{ github.sha }}

      - name: Load Docker images
        run: |
          docker load < /tmp/neo4j.tar
          docker load < /tmp/backend.tar
          docker load < /tmp/webapp.tar

      - name: Start system
        run: |
          docker compose -f docker-compose.yml -f docker-compose.test.yml up --build --detach webapp mailserver

      - name: Wait for webapp
        run: timeout 60 bash -c 'until curl -s http://localhost:3000 > /dev/null; do sleep 2; done'

      - name: Run Cypress tests
        id: tests
        run: yarn run cypress:run --spec $(cypress/parallel-features.sh ${{ matrix.job }} ${{ env.jobs }})

      - name: Generate HTML report
        if: failure() && steps.tests.conclusion == 'failure'
        run: |
          cd cypress
          node create-cucumber-html-report.js

      - name: Upload HTML report
        if: failure() && steps.tests.conclusion == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: e2e-report
          path: cypress/reports/cucumber_html_report
