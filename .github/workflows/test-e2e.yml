name: ocelot.social test-e2e ⇌⋇⟴

on:
  push:
    paths:
      - 'backend/**'
      - 'webapp/**'
      - 'neo4j/**'
      - 'cypress/**'
      - '.github/workflows/test-e2e.yml'
      - 'docker-compose*.yml'
  workflow_dispatch:

jobs:
  determine-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - name: Count feature files and create matrix
        id: set
        run: |
          count=$(find cypress -name "*.feature" | wc -l)
          max=8
          actual=$(( count < max ? count : max ))
          if [ "$actual" -eq 0 ]; then
            echo "matrix=[1]" >> $GITHUB_OUTPUT
          else
            json=$(seq 1 $actual | jq -R . | jq -s .)
            echo "matrix=$json" >> $GITHUB_OUTPUT
          fi

  test:
    name: e2e test fullstack
    runs-on: ubuntu-latest
    needs: determine-matrix
    strategy:
      matrix:
        job: ${{ fromJson(needs.determine-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Build and save docker images
        run: |
          docker build --target community -t ocelotsocialnetwork/neo4j-community:test neo4j/
          docker build --target test -t ocelotsocialnetwork/backend:test backend/
          docker build --target test -t ocelotsocialnetwork/webapp:test webapp/
          docker save ocelotsocialnetwork/neo4j-community:test > neo4j.tar
          docker save ocelotsocialnetwork/backend:test > backend.tar
          docker save ocelotsocialnetwork/webapp:test > webapp.tar

      - name: Set up env & cypress
        run: |
          cp webapp/.env.template webapp/.env
          cp backend/.env.test_e2e backend/.env
          wget -O /opt/cucumber-json-formatter https://github.com/cucumber/json-formatter/releases/download/v19.0.0/cucumber-json-formatter-linux-386
          chmod +x /opt/cucumber-json-formatter
          cd backend && yarn install && yarn build && cd ..
          yarn install

      - name: Start stack
        run: |
          docker load < neo4j.tar
          docker load < backend.tar
          docker load < webapp.tar
          docker compose -f docker-compose.yml -f docker-compose.test.yml up -d --no-deps --no-build webapp neo4j backend mailserver
          echo "⇌ waiting for webapp..."
          timeout 120s bash -c 'until curl -s http://localhost:3000/ > /dev/null; do sleep 2; done' || exit 1

      - name: Run Cypress e2e
        id: e2e-tests
        run: |
          SPEC=$(cypress/parallel-features.sh ${{ matrix.job }} ${{ strategy.job-total }})
          if [ -z "$SPEC" ]; then
            echo "⚠️ No spec assigned to job ${{ matrix.job }} – skipping."
            exit 0
          fi
          yarn run cypress:run --spec "$SPEC"

      - name: Report (on fail)
        if: failure()
        run: |
          cd cypress
          node create-cucumber-html-report.js || echo "No report generated."

      - name: Upload report (on fail)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-report-${{ matrix.job }}
          path: cypress/reports/cucumber_html_report
