name: ocelot.social test-e2e ⇌⋇⟴

on:
  push:
    paths:
      - '**/package.json'
      - 'cypress/**'
      - '.github/workflows/test-e2e.yml'
      - 'docker-compose*.yml'
  workflow_dispatch:

jobs:
  determine-install-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set
        shell: bash
        run: |
          modules=$(find . -name package.json | grep -v node_modules | sed 's|/package.json||' | sed 's|^./||')
          limited=$(echo "$modules" | head -n 8 | jq -R . | jq -s -c '.')
          echo "Install matrix: $limited"
          echo "matrix=$limited" >> "$GITHUB_OUTPUT"

  prepare-install:
    runs-on: ubuntu-latest
    needs: determine-install-matrix
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJson(needs.determine-install-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Install ${{ matrix.module }} dependencies
        working-directory: ${{ matrix.module }}
        run: yarn install

      - name: Verify Cypress (if webapp)
        if: matrix.module == 'webapp'
        run: yarn cypress:verify

      - name: Cache Cypress (if webapp)
        if: matrix.module == 'webapp'
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

  determine-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Create dynamic test matrix
        id: set
        shell: bash
        run: |
          generate_matrix() {
            local count=$(find cypress/e2e -name "*.feature" | wc -l)
            local max=8
            local actual=$(( count < max ? count : max ))
            seq 1 "$actual" | jq -R . | jq -s '.'
          }
          matrix=$(generate_matrix | jq -c '.')
          echo "Generated Matrix: $matrix"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  # ... (restliche Jobs bleiben gleich, aber test: bekommt needs: [prepare-install, determine-matrix, combine-images])
