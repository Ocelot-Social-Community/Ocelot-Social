services:

  webapp:
    image: ghcr.io/ocelot-social-community/ocelot-social/webapp:local-development
    build:
      target: development
    environment:
      - NODE_ENV="development"
      # - DEBUG=true
      - NUXT_BUILD=/tmp/nuxt # avoid file permission issues when `rm -rf .nuxt/`
    volumes:
      - ./webapp:/app

  backend:
    image: ghcr.io/ocelot-social-community/ocelot-social/backend:local-development
    ports:
      - 9000:9000
    depends_on:
      - minio
      - minio-mc
      - imagor
    build:
      target: development
    environment:
      - NODE_ENV="development"
      - SMTP_PORT=1025
      - SMTP_HOST=mailserver
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=12341234
      - AWS_ENDPOINT=http:/localhost:9000
      - AWS_REGION=local
      - AWS_BUCKET=ocelot
      - IMAGOR_PUBLIC_URL=http://localhost:8000
      - IMAGOR_SECRET=mysecret
      - PROXY_S3=http://minio:9000
    volumes:
      - ./backend:/app

  neo4j:
    ports:
      # Also expose the neo4j query browser
      - 7474:7474

  mailserver:
    image: maildev/maildev
    container_name: mailserver
    ports:
      - 1080:1080
      - 1025:1025

  minio:
    image: quay.io/minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=12341234
    command: server /data --console-address ":9001"

  minio-mc:
    image: quay.io/minio/mc
    depends_on:
      - minio
    restart: on-failure
    volumes:
      - ./minio/readonly-policy.json:/tmp/readonly-policy.json
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set dockerminio http://minio:9000 minio 12341234;
      /usr/bin/mc mb --ignore-existing dockerminio/ocelot;
      /usr/bin/mc anonymous set-json /tmp/readonly-policy.json dockerminio/ocelot;
      "

  imagor:
    image: shumc/imagor:latest
    ports:
      - 8000:8000
    environment:
      PORT: 8000
      IMAGOR_SECRET: mysecret # secret key for URL signature
      # IMAGOR_UNSAFE: 1 # unsafe URL for testing
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: 12341234
      AWS_ENDPOINT: http:/minio:9000
      S3_FORCE_PATH_STYLE: 1
      S3_LOADER_BUCKET: ocelot # enable S3 loader by specifying bucket
      S3_STORAGE_BUCKET: ocelot # enable S3 storage by specifying bucket
      S3_RESULT_STORAGE_BUCKET: ocelot # enable S3 result storage by specifying bucket
      HTTP_LOADER_BASE_URL: http://minio:9000

volumes:
  minio_data:
